services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: monprojet_web
    command: gunicorn monprojet.wsgi --config gunicorn_config.py
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./logs:/app/logs
    env_file:
      - .env    
    environment:
      DJANGO_SETTINGS_MODULE: monprojet.settings
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DJANGO_ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
      DJANGO_DEBUG: ${DEBUG}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      SERVER_EMAIL: ${SERVER_EMAIL}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - django_network
      - traefik_proxy
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monblog.rule=Host(`monblog.jbertrand.fr`)"
      - "traefik.http.routers.monblog.entrypoints=websecure"
      - "traefik.http.routers.monblog.tls.certresolver=letsencrypt"
      - "traefik.http.routers.monblog.service=monblog"
      - "traefik.http.services.monblog.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik_proxy"

  db:
    image: postgres:13
    container_name: monprojet_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-blogDb}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-julien}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - django_network
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: monprojet_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - django_network
    restart: always
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:

networks:
  django_network:
    driver: bridge
  traefik_proxy:
    external: true
